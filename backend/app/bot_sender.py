import httpx
import json
from .config import settings

BOT_API_URL = f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}"

async def send_welcome_message(telegram_user_id: str, login_url: str):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –∏ –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –≤—Ö–æ–¥–∞.
    """
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "Login URL"
    login_button = {
        "type": "web_app",
        "text": "üöÄ –í–æ–π—Ç–∏ –≤ –∫–∞–±–∏–Ω–µ—Ç",
        "web_app": {"url": login_url}
    }
    keyboard = {"inline_keyboard": [[login_button]]}

    params = {
        'chat_id': telegram_user_id,
        'photo': settings.START_MESSAGE_IMAGE_URL,
        'caption': settings.START_MESSAGE_TEXT,
        'reply_markup': json.dumps(keyboard)
    }
    
    async with httpx.AsyncClient() as client:
        try:
            response = await client.post(f"{BOT_API_URL}/sendPhoto", params=params)
            response.raise_for_status()
            return response.json().get("ok", False)
        except Exception as e:
            print(f"Failed to send welcome message: {e}")
            return False

async def send_photo_to_user(telegram_user_id: str, image_bytes: bytes, caption: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ/–∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    files = {'photo': ('code.png', image_bytes, 'image/png')}
    params = {'chat_id': telegram_user_id, 'caption': caption}
    
    async with httpx.AsyncClient() as client:
        try:
            response = await client.post(f"{BOT_API_URL}/sendPhoto", params=params, files=files)
            response.raise_for_status()
            result = response.json()
            return result.get("ok", False)
        except Exception as e:
            print(f"Failed to send photo via Telegram: {e}")
            return False